{"version":3,"sources":["components/GoodCard.tsx","components/GoodList.tsx","App.tsx","index.tsx"],"names":["GoodCard","_ref","good","_jsx","children","GoodList","goods","className","map","goodsFromServer","SortType","App","selectedGood","setSelectedGood","useState","DEFAULT","isReverse","setIsReverse","goodsArray","value","typeSort","result","ALPHABET","sort","a","b","localeCompare","LENGTH","length","reverse","sortAndReverseArray","_jsxs","type","onClick","cn","handleReverseClick","ReactDOM","render","document","getElementById"],"mappings":"0OAMO,MAAMA,EAA4BC,IAAA,IAAC,KAAEC,GAAMD,EAAA,OAChDE,cAAA,MAAI,UAAQ,OAAMC,SACfF,GACE,ECFMG,EAA4BJ,IAAA,IAAC,MAAEK,GAAOL,EAAA,OACjDE,cAAA,MAAII,UAAU,YAAWH,SACtBE,EAAME,KAAKN,GACVC,cAACH,EAAQ,CAAYE,KAAMA,GAAZA,MAEd,ECJMO,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UACA,IAEGC,EAAQ,SAARA,GAAQ,OAARA,EAAQ,oBAARA,EAAQ,gBAARA,EAAQ,WAARA,CAAQ,EAARA,GAAQ,IAYb,MAuBaC,EAAgBA,KAC3B,MACEC,EACAC,GACEC,mBAAmCJ,EAASK,UAG9CC,EACAC,GACEH,oBAAkB,GAEhBI,EAlCoBjB,KACA,IADC,MAAEkB,EAAK,SAAEC,EAAQ,UAAEJ,GACpCf,EACNoB,EAAmB,IAAIF,GAE3B,OAAQC,GACN,KAAKV,EAASY,SACZD,EAASA,EAAOE,MAAK,CAACC,EAAGC,IAAMD,EAAEE,cAAcD,KAC/C,MACF,KAAKf,EAASiB,OACZN,EAASA,EAAOE,MAAK,CAACC,EAAGC,IAAMD,EAAEI,OAASH,EAAEG,SAE9C,KAAKlB,EAASK,SAShB,OAJIC,IACFK,EAAS,IAAIA,GAAQQ,WAGhBR,CAAM,EAcMS,CAAoB,CACrCX,MAAOV,EACPW,SAAUR,EACVI,cAOF,OACEe,eAAA,OAAKxB,UAAU,kBAAiBH,SAAA,CAC9B2B,eAAA,OAAKxB,UAAU,UAASH,SAAA,CACtBD,cAAA,UACE6B,KAAK,SACLC,QAASA,KACPpB,EAAgBH,EAASY,SAAS,EAEpCf,UAAW2B,IAAG,iBAAkB,CAC9B,WAAYtB,IAAiBF,EAASY,WACrClB,SACJ,wBAIDD,cAAA,UACE6B,KAAK,SACLC,QAASA,KACPpB,EAAgBH,EAASiB,OAAO,EAElCpB,UAAW2B,IAAG,oBAAqB,CACjC,WAAYtB,IAAiBF,EAASiB,SACrCvB,SACJ,mBAIDD,cAAA,UACE6B,KAAK,SACLC,QAjCmBE,KACzBlB,GAAcD,EAAU,EAiClBT,UAAW2B,IAAG,oBAAqB,CACjC,WAAYlB,IACXZ,SACJ,aAICQ,IAAiBF,EAASY,UAAYV,IAAiBF,EAASiB,QAC/DX,IAEDb,cAAA,UACE6B,KAAK,SACLC,QAASA,KACPpB,EAAgBH,EAASK,SACzBE,GAAa,EAAM,EAErBV,UAAW2B,IAAG,mBAAoB,CAChC,WAAY,CAAElB,eACbZ,SACJ,aAMLD,cAACE,EAAQ,CACPC,MAAOY,MAEL,ECpIVkB,IAASC,OACPlC,cAACQ,EAAG,IACJ2B,SAASC,eAAe,Q","file":"static/js/main.15d36da7.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  good: string;\n};\n\nexport const GoodCard: React.FC<Props> = ({ good }) => (\n  <li data-cy=\"Good\">\n    {good}\n  </li>\n);\n","import React from 'react';\nimport { GoodCard } from './GoodCard';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const GoodList: React.FC<Props> = ({ goods }) => (\n  <ul className=\"good-list\">\n    {goods.map((good) => (\n      <GoodCard key={good} good={good} />\n    ))}\n  </ul>\n);\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\n\nimport cn from 'classnames';\n\nimport './App.scss';\nimport { GoodList } from './components/GoodList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  ALPHABET = 'ALPHABET',\n  LENGTH = 'LENGTH',\n  DEFAULT = '',\n}\n\ntype FilterParams = {\n  value: string[],\n  typeSort: SortType,\n  isReverse: boolean,\n};\n\nconst sortAndReverseArray = ({ value, typeSort, isReverse }:\nFilterParams): string[] => {\n  let result: string[] = [...value];\n\n  switch (typeSort) {\n    case SortType.ALPHABET:\n      result = result.sort((a, b) => a.localeCompare(b));\n      break;\n    case SortType.LENGTH:\n      result = result.sort((a, b) => a.length - b.length);\n      break;\n    case SortType.DEFAULT:\n    default:\n      break;\n  }\n\n  if (isReverse) {\n    result = [...result].reverse();\n  }\n\n  return result;\n};\n\nexport const App: React.FC = () => {\n  const [\n    selectedGood,\n    setSelectedGood,\n  ] = useState<FilterParams['typeSort']>(SortType.DEFAULT);\n\n  const [\n    isReverse,\n    setIsReverse,\n  ] = useState<boolean>(false);\n\n  const goodsArray = sortAndReverseArray({\n    value: goodsFromServer,\n    typeSort: selectedGood,\n    isReverse,\n  });\n\n  const handleReverseClick = () => {\n    setIsReverse(!isReverse);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => {\n            setSelectedGood(SortType.ALPHABET);\n          }}\n          className={cn('button is-info', {\n            'is-light': selectedGood !== SortType.ALPHABET,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            setSelectedGood(SortType.LENGTH);\n          }}\n          className={cn('button is-success', {\n            'is-light': selectedGood !== SortType.LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={handleReverseClick}\n          className={cn('button is-warning', {\n            'is-light': isReverse,\n          })}\n        >\n          Reverse\n        </button>\n\n        {(selectedGood === SortType.ALPHABET || selectedGood === SortType.LENGTH\n        || isReverse)\n        && (\n          <button\n            type=\"button\"\n            onClick={() => {\n              setSelectedGood(SortType.DEFAULT);\n              setIsReverse(false);\n            }}\n            className={cn('button is-danger', {\n              'is-light': { isReverse },\n            })}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodList\n        goods={goodsArray}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}